{"version":3,"file":"prevent-fast-forwarding.min.js","sources":["../src/prevent-fast-forwarding.js"],"sourcesContent":["\nimport VideoTimePlugin from \"mod_videotime/videotime-plugin\";\nimport Ajax from \"core/ajax\";\nimport Notification from \"core/notification\";\nimport Log from \"core/log\";\nimport {get_string as getString} from \"core/str\";\n\nexport default class PreventFastForwarding extends VideoTimePlugin {\n    /**\n     * Constructor\n     */\n    constructor() {\n        super('preventfastforwarding');\n        this.watchTime = 0;\n        this.seeking = false;\n        this.duration = 0;\n        this.playbackRate = 1;\n        this.fastForwardBuffer = 2.5; // Seconds.\n        this.lastNotice = 0;\n    }\n\n    /**\n     * Initialize the videotime instance with prevent fast forwarding module\n     * @param {VideoTime} videotime\n     * @param {object} instance Prefetched VideoTime instance object.\n     */\n    initialize(videotime, instance) {\n        if (!instance.preventfastforwarding) {\n            // Prevent fast forwarding not enabled for this cm.\n            super.initialize(videotime);\n            return;\n        }\n\n        this.getWatchPercent(videotime.getCmId()).then((percent) => {\n            videotime.getPlayer().getDuration().then((duration) => {\n                this.duration = duration;\n                this.watchTime = percent * duration;\n                Log.debug(\"PREVENT FF: duration \" + duration);\n                Log.debug(\"PREVENT FF: watch time \" + this.watchTime);\n            }).catch(Notification.exception);\n        }).fail(Notification.exception);\n\n        // Keep track of playback rate.\n        videotime.getPlayer().getPlaybackRate().then((playbackRate) => {\n            this.playbackRate = playbackRate;\n        });\n        videotime.getPlayer().on('playbackratechange', (data) => {\n            this.playbackRate = data.playbackRate;\n        });\n\n        videotime.getPlayer().on('timeupdate', (data) => {\n            Log.debug(\"PREVENT FF: watch time \" + data.seconds);\n\n            if (data.seconds > this.watchTime + this.fastForwardBuffer * this.playbackRate) {\n                // Seeked too far forward.\n                Log.debug(\"PREVENT FF: Preventing...\");\n                videotime.getPlayer().setCurrentTime(this.watchTime);\n                if (Date.now() > this.lastNotice + 5000) {\n                    this.lastNotice = Date.now();\n                    getString('preventfastforwardingmessage', 'mod_videotime', {\n                        percent: Math.round(this.watchTime * 100 / this.duration)\n                    }).then(this.message).fail(Notification.exception);\n                }\n            } else if (data.seconds > this.watchTime) {\n                this.watchTime = data.seconds;\n                Log.debug(\"PREVENT FF: setting watch time \" + data.seconds);\n            }\n        });\n\n        super.initialize(videotime);\n    }\n\n    /**\n     * Send notification to user interface\n     *\n     * @param {string} message message to send\n     */\n    message(message) {\n        Notification.addNotification({\n            message: message,\n            type: 'info'\n        });\n    }\n\n    /**\n     * Get how far (in percent 0.0 - 1.0) someone has watched a video.\n     *\n     * @param {int} cmId\n     * @returns {Promise}\n     */\n    getWatchPercent(cmId) {\n        return Ajax.call([{\n            methodname: 'videotimeplugin_pro_get_watch_percent',\n            args: {cmid: cmId}\n        }])[0];\n    }\n}\n"],"names":["PreventFastForwarding","VideoTimePlugin","constructor","watchTime","seeking","duration","playbackRate","fastForwardBuffer","lastNotice","initialize","videotime","instance","preventfastforwarding","getWatchPercent","getCmId","then","percent","getPlayer","getDuration","debug","this","catch","Notification","exception","fail","getPlaybackRate","on","data","seconds","setCurrentTime","Date","now","Math","round","message","addNotification","type","cmId","Ajax","call","methodname","args","cmid"],"mappings":"ujBAOqBA,8BAA8BC,yBAI/CC,oBACU,8BACDC,UAAY,OACZC,SAAU,OACVC,SAAW,OACXC,aAAe,OACfC,kBAAoB,SACpBC,WAAa,EAQtBC,WAAWC,UAAWC,UACbA,SAASC,4BAMTC,gBAAgBH,UAAUI,WAAWC,MAAMC,UAC5CN,UAAUO,YAAYC,cAAcH,MAAMV,gBACjCA,SAAWA,cACXF,UAAYa,QAAUX,sBACvBc,MAAM,wBAA0Bd,uBAChCc,MAAM,0BAA4BC,KAAKjB,cAC5CkB,MAAMC,sBAAaC,cACvBC,KAAKF,sBAAaC,WAGrBb,UAAUO,YAAYQ,kBAAkBV,MAAMT,oBACrCA,aAAeA,gBAExBI,UAAUO,YAAYS,GAAG,sBAAuBC,YACvCrB,aAAeqB,KAAKrB,gBAG7BI,UAAUO,YAAYS,GAAG,cAAeC,oBAChCR,MAAM,0BAA4BQ,KAAKC,SAEvCD,KAAKC,QAAUR,KAAKjB,UAAYiB,KAAKb,kBAAoBa,KAAKd,2BAE1Da,MAAM,6BACVT,UAAUO,YAAYY,eAAeT,KAAKjB,WACtC2B,KAAKC,MAAQX,KAAKZ,WAAa,WAC1BA,WAAasB,KAAKC,0BACb,+BAAgC,gBAAiB,CACvDf,QAASgB,KAAKC,MAAuB,IAAjBb,KAAKjB,UAAkBiB,KAAKf,YACjDU,KAAKK,KAAKc,SAASV,KAAKF,sBAAaC,aAErCI,KAAKC,QAAUR,KAAKjB,iBACtBA,UAAYwB,KAAKC,qBAClBT,MAAM,kCAAoCQ,KAAKC,mBAIrDnB,WAAWC,kBAxCPD,WAAWC,WAgDzBwB,QAAQA,+BACSC,gBAAgB,CACzBD,QAASA,QACTE,KAAM,SAUdvB,gBAAgBwB,aACLC,cAAKC,KAAK,CAAC,CACdC,WAAY,wCACZC,KAAM,CAACC,KAAML,SACb"}