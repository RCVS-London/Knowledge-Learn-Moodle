{"version":3,"file":"modal_video_list.min.js","sources":["../src/modal_video_list.js"],"sourcesContent":["define(['jquery', 'core/notification', 'core/custom_interaction_events', 'core/modal', 'core/modal_registry', 'core/templates',\n        'core/ajax', 'core/modal_factory', 'core/modal_events', 'core/str', 'videotimeplugin_repository/select2',\n        'videotimeplugin_repository/pagination'], function($, Notification, CustomEvents, Modal, ModalRegistry, Templates, Ajax,\n                                                           ModalFactory, ModalEvents, str, select2, Pagination) {\n\n        var registered = false;\n\n        /**\n         * Constructor for the Modal.\n         *\n         * @param {object} root The root jQuery element for the modal\n         */\n        var ModalVideoList = function(root) {\n            Modal.call(this, root);\n            this.contextId = null;\n            this.videos = [];\n            this.videoPageIndex = [];\n            this.descriptionModal = null;\n            this.embedsModal = null;\n            this.previewModal = null;\n            this.confirmModal = null;\n            this.query = null;\n            this.filterData = {};\n            this.perPage = 10;\n            this.pagination = new Pagination(this.perPage, 0, root);\n            this.pagination.init();\n            this.sort = null;\n            this.sortdirections = {};\n            this.readOnly = null;\n        };\n\n        ModalVideoList.TYPE = 'video-list';\n        ModalVideoList.prototype = Object.create(Modal.prototype);\n        ModalVideoList.prototype.constructor = ModalVideoList;\n\n        /**\n         * Any prerequisites to modal functionality.\n         */\n        ModalVideoList.prototype.init = function() {\n            this.pagination.getContainer().on('pagination.changePage', function() {\n                this.refreshTable();\n            }.bind(this));\n\n            // Build modals that use Promises for content. This will force it to preload.\n            // There was an issue where footers would only display when the modal was opened as second time.\n            this.getConfirmModal(function() {});\n            this.getPreviewModal(function() {});\n        };\n\n        /**\n         * Set if modal list is read only (cannot select videos for embedding).\n         *\n         * @param {boolean} readOnly\n         */\n        ModalVideoList.prototype.setReadOnly = function(readOnly) {\n            this.readOnly = readOnly;\n        };\n\n        ModalVideoList.prototype.setContextId = function(contextId) {\n            this.contextId = contextId;\n        };\n\n        ModalVideoList.prototype.refreshTable = function() {\n\n            let args = {\n                'contextid': this.contextId,\n                'query': this.query,\n                'filter_data': this.filterData,\n                'limitfrom': this.pagination.getLimitFrom(),\n                'limitnum': this.perPage\n            };\n\n            if (this.sort) {\n                args.sort = this.sort;\n                args.sortdirection = this.sortdirections[this.sort];\n            }\n\n            var promises = Ajax.call([\n                {\n                    methodname: 'videotimeplugin_repository_search_videos', args: args\n                }\n            ]);\n\n            promises[0].done(function(response) {\n                response.data.forEach(function(item) {\n                    this.videos[item.uri] = item;\n                    this.videoPageIndex[item.uri] = this.pagination.getCurrentPage();\n                }.bind(this));\n                let context = Object.assign(response, {readonly: this.readOnly});\n                Templates.render('videotimeplugin_repository/video_table', context)\n                    .then(function(html) {\n                        this.pagination.setTotalItems(response.total);\n                        this.pagination.render('#pagination-container');\n\n                        this.getRoot().find('.video-list-table').html(html);\n                    }.bind(this));\n            }.bind(this));\n        };\n\n        /**\n         * Set up all of the event handling for the modal.\n         *\n         * @method registerEventListeners\n         */\n        ModalVideoList.prototype.registerEventListeners = function() {\n            // Apply parent event listeners.\n            Modal.prototype.registerEventListeners.call(this);\n\n            this.getRoot().on(ModalEvents.shown, function() {\n                this.getModal().find('.select2').each(function(index, element) {\n                    $(element).select2({\n                        dropdownParent: this.getRoot()\n                    });\n                }.bind(this));\n            }.bind(this));\n\n            this.getModal().on(CustomEvents.events.activate, '[data-action=use-video]', function(e) {\n                this.showConfirmModal($(e.target).data('uri'));\n            }.bind(this));\n\n            this.getModal().on(CustomEvents.events.activate, '[data-action=show-description]', function(e) {\n                this.showDescriptionModal($(e.target).data('uri'));\n            }.bind(this));\n\n            this.getModal().on(CustomEvents.events.activate, '[data-action=show-embeds]', function(e) {\n                this.showEmbedsModal($(e.target).data('uri'));\n            }.bind(this));\n\n            this.getModal().on(CustomEvents.events.activate, '[data-action=preview]', function(e) {\n                this.showPreviewModal($(e.target).data('uri'));\n            }.bind(this));\n\n            this.getModal().on(CustomEvents.events.activate, '[data-action=search]', function(e) {\n                this.setQuery($($(e.target).data('target')).val());\n            }.bind(this));\n\n            this.getModal().on(CustomEvents.events.activate, '[data-action=clear-search]', function(e) {\n                this.query = '';\n                $($(e.target).data('target')).val('');\n                this.pagination.setCurrentPage(0);\n                this.refreshTable();\n            }.bind(this));\n\n            this.getModal().on(CustomEvents.events.activate, '[data-action=apply-filters]', function() {\n                this.applyFilters();\n            }.bind(this));\n\n            this.getModal().on(CustomEvents.events.activate, '[data-action=clear-filters]', function(e) {\n                this.filterData = [];\n                $($(e.target).data('target')).val('');\n                this.getModal().find('.select2').val(null).trigger('change');\n                this.pagination.setCurrentPage(0);\n                this.refreshTable();\n            }.bind(this));\n\n            this.getModal().on(CustomEvents.events.activate, '[data-action=sort]', function(e) {\n                this.sort = $(e.target).data('field');\n                let direction = 'ASC';\n                if (this.sortdirections.hasOwnProperty(this.sort)) {\n                    if (this.sortdirections[this.sort] == 'ASC') {\n                        direction = 'DESC';\n                    } else {\n                        direction = 'ASC';\n                    }\n                }\n                this.sortdirections[this.sort] = direction;\n                this.refreshTable();\n            }.bind(this));\n        };\n\n        /**\n         * Apply filter form values.\n         */\n        ModalVideoList.prototype.applyFilters = function() {\n            this.filterData = this.getRoot().find('form').serializeArray();\n            this.pagination.setCurrentPage(0);\n            this.refreshTable();\n        };\n\n        ModalVideoList.prototype.useVideo = function(videoUri, overrideSettings) {\n            var video = this.videos[videoUri];\n\n            $('#id_vimeo_url').val(video.link);\n            $('#id_vimeo_url').attr('readonly', 'readonly');\n            $('#id_choose_video').html(video.name);\n            $('#id_choose_video').val(video.name);\n            $('#id_choose_video').addClass('btn-success');\n            if (overrideSettings) {\n                $('#id_name').val(video.name);\n                $('#id_introeditor').val(video.description);\n                $('#id_introeditoreditable').html(video.description);\n                $('#id_completion_on_view_time_second').val(video.duration);\n\n                // Add tags\n                // First remove any selections.\n                $(\"#fitem_id_tags .form-autocomplete-selection\").empty();\n                $(\"#fitem_id_tags #id_tags\").empty();\n                $.each(video.tags, function(index, tag) {\n                    $(\"#fitem_id_tags #id_tags\").append('<option data-iscustom=\"true\" value=\"' + tag.name +\n                        '\" selected>' + tag.name + '</option>');\n                    $(\"#fitem_id_tags .form-autocomplete-selection\").append('<span role=\"listitem\" data-value=\"' +\n                        tag.name + '\" aria-selected=\"true\" class=\"label label-info\"><span aria-hidden=\"true\">Ã— </span>' +\n                        tag.name + '</span>');\n                });\n            }\n            this.hide();\n        };\n\n        /**\n         * Display modal with full video description.\n         *\n         * @param {string} videoUri\n         */\n        ModalVideoList.prototype.showDescriptionModal = function(videoUri) {\n            if (!this.videos.hasOwnProperty(videoUri)) {\n                return;\n            }\n\n            var video = this.videos[videoUri];\n\n            this.getDescriptionModal(function(modal) {\n                modal.setTitle(video.name);\n                modal.setBody(video.description);\n                modal.show();\n            }.bind(this));\n        };\n\n        /**\n         * Utilize callback to receive the same instance of the description modal.\n         *\n         * @param {function} callback\n         */\n        ModalVideoList.prototype.getDescriptionModal = function(callback) {\n            if (!this.descriptionModal) {\n                ModalFactory.create({}).done(function(modal) {\n                    this.descriptionModal = modal;\n                    callback(this.descriptionModal);\n                }.bind(this));\n            } else {\n                callback(this.descriptionModal);\n            }\n        };\n\n        /**\n         * Display modal with full video description.\n         *\n         * @param {string} videoUri\n         */\n        ModalVideoList.prototype.showEmbedsModal = function(videoUri) {\n            if (!this.videos.hasOwnProperty(videoUri)) {\n                return;\n            }\n\n            var video = this.videos[videoUri];\n\n            str.get_string('embeds', 'videotime').done(function(string) {\n                this.getEmbedsModal(function(modal) {\n                    modal.setTitle(video.name + ' ' + string);\n                    modal.setBody(Templates.render('videotimeplugin_repository/embeds', {video: video}));\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n        };\n\n        /**\n         * Utilize callback to receive the same instance of the embeds modal.\n         *\n         * @param {function} callback\n         */\n        ModalVideoList.prototype.getEmbedsModal = function(callback) {\n            if (!this.embedsModal) {\n                ModalFactory.create({}).done(function(modal) {\n                    this.embedsModal = modal;\n                    callback(this.embedsModal);\n                }.bind(this));\n            } else {\n                callback(this.embedsModal);\n            }\n        };\n\n        /**\n         * Display modal with full video description.\n         *\n         * @param {string} videoUri\n         */\n        ModalVideoList.prototype.showPreviewModal = function(videoUri) {\n            if (!this.videos.hasOwnProperty(videoUri)) {\n                return;\n            }\n\n            var video = this.videos[videoUri];\n\n            this.getPreviousAndNextVideoInSearch(videoUri).then(function(data) {\n                str.get_string('preview', 'moodle').done(function(string) {\n                    this.getPreviewModal(function(modal) {\n                        modal.setTitle(video.name + ' ' + string);\n                        modal.setBody(Templates.render('videotimeplugin_repository/preview_modal_body', {\n                            video: video,\n                            next_video: data.nextVideo,\n                            previous_video: data.previousVideo\n                        }));\n                        modal.show();\n                    }.bind(this));\n                }.bind(this));\n            }.bind(this));\n        };\n\n        /**\n         * Utilize callback to receive the same instance of the preview modal.\n         *\n         * @param {function} callback\n         */\n        ModalVideoList.prototype.getPreviewModal = function(callback) {\n            if (!this.previewModal) {\n                ModalFactory.create({\n                    large: true,\n                    footer: Templates.render('videotimeplugin_repository/preview_modal_footer', {readonly: this.readOnly})\n                }).done(function(modal) {\n                    this.previewModal = modal;\n                    modal.getModal().on(CustomEvents.events.activate, '[data-action=use-video]', function() {\n                        modal.hide();\n                        this.showConfirmModal(modal.getModal().find('#vimeo-embed').data('uri'));\n                    }.bind(this));\n                    modal.getRoot().on(CustomEvents.events.activate, '[data-action=preview]', function(e) {\n                        this.showPreviewModal($(e.target).data('uri'));\n                    }.bind(this));\n                    callback(this.previewModal);\n                }.bind(this));\n            } else {\n                callback(this.previewModal);\n            }\n        };\n\n        /**\n         * Get previous video based on search criteria.\n         *\n         * @param {string} videoUri\n         * @returns {Promise}\n         */\n        ModalVideoList.prototype.getPreviousAndNextVideoInSearch = function(videoUri) {\n            let page = this.videoPageIndex[videoUri];\n            let limitfrom = 0;\n            if (page > 0) {\n                limitfrom = page * this.perPage - 1; // Negative 1 to cover videos on previous page.\n            }\n\n            let args = {\n                'contextid': this.contextId,\n                'query': this.query,\n                'filter_data': this.filterData,\n                'limitfrom': limitfrom,\n                'limitnum': this.perPage + 2 // Plus 2 to cover videos on next page.\n            };\n\n            if (this.sort) {\n                args.sort = this.sort;\n                args.sortdirection = this.sortdirections[this.sort];\n            }\n\n            return new Promise((resolve) => {\n                Ajax.call([{methodname: 'videotimeplugin_repository_search_videos', args: args}])[0].done(function (response) {\n                    let previousVideo = null;\n                    let nextVideo = null;\n\n                    let last = null;\n                    let useNext = false;\n\n                    response.data.forEach(function (item, index) {\n                        if (useNext) {\n                            nextVideo = item;\n                            useNext = false;\n                        }\n                        if (item.uri === videoUri) {\n                            previousVideo = last;\n                            useNext = true;\n                        }\n\n                        this.videos[item.uri] = item;\n                        // Calculate page of video. It may not be set yet.\n                        let pageIndex = Math.floor((limitfrom + index) / this.perPage);\n                        this.videoPageIndex[item.uri] = pageIndex;\n\n                        last = item;\n                    }.bind(this));\n\n                    resolve({previousVideo: previousVideo, nextVideo: nextVideo});\n                }.bind(this));\n            });\n        };\n\n        /**\n         * Display confirmation modal.\n         *\n         * @param {string} videoUri\n         */\n        ModalVideoList.prototype.showConfirmModal = function(videoUri) {\n            if (!this.videos.hasOwnProperty(videoUri)) {\n                return;\n            }\n\n            var video = this.videos[videoUri];\n\n            str.get_strings([\n                {key: 'confirmation', component: 'videotime'},\n                {key: 'choose_video_confirm', component: 'videotime'}\n            ]).done(function(strings) {\n                this.getConfirmModal(function(modal) {\n                    modal.setTitle(strings[0]);\n                    modal.setBody('<p>' + strings[1] + ' \"' + video.name +\n                        '\"?</p><input type=\"hidden\" name=\"uri\" value=\"' + video.uri + '\">');\n                    modal.show();\n                }.bind(this));\n            }.bind(this));\n        };\n\n        /**\n         * Utilize callback to receive the same instance of the confirm modal.\n         *\n         * @param {function} callback\n         */\n        ModalVideoList.prototype.getConfirmModal = function(callback) {\n            if (!this.confirmModal) {\n                ModalFactory.create({\n                    footer: Templates.render('videotimeplugin_repository/confirm_modal_footer', {readonly: this.readOnly})\n                }).done(function(modal) {\n                    this.confirmModal = modal;\n                    modal.getModal().on(CustomEvents.events.activate, '[data-action=use-video]', function() {\n                        modal.hide();\n                        var uri = modal.getModal().find('[name=uri]').val();\n                        var override = modal.getModal().find('[name=override]').prop('checked');\n                        this.useVideo(uri, override);\n                    }.bind(this));\n                    callback(this.confirmModal);\n                }.bind(this));\n            } else {\n                callback(this.confirmModal);\n            }\n        };\n\n        // Automatically register with the modal registry the first time this module is imported so that you can create modals\n        // of this type using the modal factory.\n        if (!registered) {\n            ModalRegistry.register(ModalVideoList.TYPE, ModalVideoList, 'videotimeplugin_repository/modal_video_list');\n            registered = true;\n        }\n\n        /**\n         * Set value on select filter.\n         *\n         * @param {string} filterName\n         * @param {string} value\n         */\n        ModalVideoList.prototype.setFilterValue = function(filterName, value) {\n            this.getRoot().find(\"[name=\" + filterName + \"]\").val(value).trigger(\"change\");\n        };\n\n        /**\n         * Set search query value and input value.\n         *\n         * @param {string} query\n         */\n        ModalVideoList.prototype.setQuery = function(query) {\n            this.getRoot().find(\"#search-input\").val(query);\n            this.query = query;\n            this.pagination.setCurrentPage(0);\n            this.refreshTable();\n        };\n\n        return ModalVideoList;\n    });\n"],"names":["define","$","Notification","CustomEvents","Modal","ModalRegistry","Templates","Ajax","ModalFactory","ModalEvents","str","select2","Pagination","registered","ModalVideoList","root","call","this","contextId","videos","videoPageIndex","descriptionModal","embedsModal","previewModal","confirmModal","query","filterData","perPage","pagination","init","sort","sortdirections","readOnly","TYPE","prototype","Object","create","constructor","getContainer","on","refreshTable","bind","getConfirmModal","getPreviewModal","setReadOnly","setContextId","args","getLimitFrom","sortdirection","methodname","done","response","data","forEach","item","uri","getCurrentPage","context","assign","readonly","render","then","html","setTotalItems","total","getRoot","find","registerEventListeners","shown","getModal","each","index","element","dropdownParent","events","activate","e","showConfirmModal","target","showDescriptionModal","showEmbedsModal","showPreviewModal","setQuery","val","setCurrentPage","applyFilters","trigger","direction","hasOwnProperty","serializeArray","useVideo","videoUri","overrideSettings","video","link","attr","name","addClass","description","duration","empty","tags","tag","append","hide","getDescriptionModal","modal","setTitle","setBody","show","callback","get_string","string","getEmbedsModal","getPreviousAndNextVideoInSearch","next_video","nextVideo","previous_video","previousVideo","large","footer","page","limitfrom","Promise","resolve","last","useNext","pageIndex","Math","floor","get_strings","key","component","strings","override","prop","register","setFilterValue","filterName","value"],"mappings":"AAAAA,qDAAO,CAAC,SAAU,oBAAqB,iCAAkC,aAAc,sBAAuB,iBACtG,YAAa,qBAAsB,oBAAqB,WAAY,qCACpE,0CAA0C,SAASC,EAAGC,aAAcC,aAAcC,MAAOC,cAAeC,UAAWC,KAChEC,aAAcC,YAAaC,IAAKC,QAASC,gBAExFC,YAAa,EAObC,eAAiB,SAASC,MAC1BX,MAAMY,KAAKC,KAAMF,WACZG,UAAY,UACZC,OAAS,QACTC,eAAiB,QACjBC,iBAAmB,UACnBC,YAAc,UACdC,aAAe,UACfC,aAAe,UACfC,MAAQ,UACRC,WAAa,QACbC,QAAU,QACVC,WAAa,IAAIhB,WAAWK,KAAKU,QAAS,EAAGZ,WAC7Ca,WAAWC,YACXC,KAAO,UACPC,eAAiB,QACjBC,SAAW,aAGpBlB,eAAemB,KAAO,cACtBnB,eAAeoB,UAAYC,OAAOC,OAAOhC,MAAM8B,YACtBG,YAAcvB,eAKvCA,eAAeoB,UAAUL,KAAO,gBACvBD,WAAWU,eAAeC,GAAG,wBAAyB,gBAClDC,gBACPC,KAAKxB,YAIFyB,iBAAgB,oBAChBC,iBAAgB,gBAQzB7B,eAAeoB,UAAUU,YAAc,SAASZ,eACvCA,SAAWA,UAGpBlB,eAAeoB,UAAUW,aAAe,SAAS3B,gBACxCA,UAAYA,WAGrBJ,eAAeoB,UAAUM,aAAe,eAEhCM,KAAO,WACM7B,KAAKC,gBACTD,KAAKQ,kBACCR,KAAKS,qBACPT,KAAKW,WAAWmB,wBACjB9B,KAAKU,SAGjBV,KAAKa,OACLgB,KAAKhB,KAAOb,KAAKa,KACjBgB,KAAKE,cAAgB/B,KAAKc,eAAed,KAAKa,OAGnCvB,KAAKS,KAAK,CACrB,CACIiC,WAAY,2CAA4CH,KAAMA,QAI7D,GAAGI,KAAK,SAASC,UACtBA,SAASC,KAAKC,QAAQ,SAASC,WACtBnC,OAAOmC,KAAKC,KAAOD,UACnBlC,eAAekC,KAAKC,KAAOtC,KAAKW,WAAW4B,kBAClDf,KAAKxB,WACHwC,QAAUtB,OAAOuB,OAAOP,SAAU,CAACQ,SAAU1C,KAAKe,WACtD1B,UAAUsD,OAAO,yCAA0CH,SACtDI,KAAK,SAASC,WACNlC,WAAWmC,cAAcZ,SAASa,YAClCpC,WAAWgC,OAAO,8BAElBK,UAAUC,KAAK,qBAAqBJ,KAAKA,OAChDrB,KAAKxB,QACbwB,KAAKxB,QAQXH,eAAeoB,UAAUiC,uBAAyB,WAE9C/D,MAAM8B,UAAUiC,uBAAuBnD,KAAKC,WAEvCgD,UAAU1B,GAAG9B,YAAY2D,MAAO,gBAC5BC,WAAWH,KAAK,YAAYI,KAAK,SAASC,MAAOC,SAClDvE,EAAEuE,SAAS7D,QAAQ,CACf8D,eAAgBxD,KAAKgD,aAE3BxB,KAAKxB,QACTwB,KAAKxB,YAEFoD,WAAW9B,GAAGpC,aAAauE,OAAOC,SAAU,0BAA2B,SAASC,QAC5EC,iBAAiB5E,EAAE2E,EAAEE,QAAQ1B,KAAK,SACzCX,KAAKxB,YAEFoD,WAAW9B,GAAGpC,aAAauE,OAAOC,SAAU,iCAAkC,SAASC,QACnFG,qBAAqB9E,EAAE2E,EAAEE,QAAQ1B,KAAK,SAC7CX,KAAKxB,YAEFoD,WAAW9B,GAAGpC,aAAauE,OAAOC,SAAU,4BAA6B,SAASC,QAC9EI,gBAAgB/E,EAAE2E,EAAEE,QAAQ1B,KAAK,SACxCX,KAAKxB,YAEFoD,WAAW9B,GAAGpC,aAAauE,OAAOC,SAAU,wBAAyB,SAASC,QAC1EK,iBAAiBhF,EAAE2E,EAAEE,QAAQ1B,KAAK,SACzCX,KAAKxB,YAEFoD,WAAW9B,GAAGpC,aAAauE,OAAOC,SAAU,uBAAwB,SAASC,QACzEM,SAASjF,EAAEA,EAAE2E,EAAEE,QAAQ1B,KAAK,WAAW+B,QAC9C1C,KAAKxB,YAEFoD,WAAW9B,GAAGpC,aAAauE,OAAOC,SAAU,6BAA8B,SAASC,QAC/EnD,MAAQ,GACbxB,EAAEA,EAAE2E,EAAEE,QAAQ1B,KAAK,WAAW+B,IAAI,SAC7BvD,WAAWwD,eAAe,QAC1B5C,gBACPC,KAAKxB,YAEFoD,WAAW9B,GAAGpC,aAAauE,OAAOC,SAAU,8BAA+B,gBACvEU,gBACP5C,KAAKxB,YAEFoD,WAAW9B,GAAGpC,aAAauE,OAAOC,SAAU,8BAA+B,SAASC,QAChFlD,WAAa,GAClBzB,EAAEA,EAAE2E,EAAEE,QAAQ1B,KAAK,WAAW+B,IAAI,SAC7Bd,WAAWH,KAAK,YAAYiB,IAAI,MAAMG,QAAQ,eAC9C1D,WAAWwD,eAAe,QAC1B5C,gBACPC,KAAKxB,YAEFoD,WAAW9B,GAAGpC,aAAauE,OAAOC,SAAU,qBAAsB,SAASC,QACvE9C,KAAO7B,EAAE2E,EAAEE,QAAQ1B,KAAK,aACzBmC,UAAY,MACZtE,KAAKc,eAAeyD,eAAevE,KAAKa,QAEpCyD,UADkC,OAAlCtE,KAAKc,eAAed,KAAKa,MACb,OAEA,YAGfC,eAAed,KAAKa,MAAQyD,eAC5B/C,gBACPC,KAAKxB,QAMXH,eAAeoB,UAAUmD,aAAe,gBAC/B3D,WAAaT,KAAKgD,UAAUC,KAAK,QAAQuB,sBACzC7D,WAAWwD,eAAe,QAC1B5C,gBAGT1B,eAAeoB,UAAUwD,SAAW,SAASC,SAAUC,sBAC/CC,MAAQ5E,KAAKE,OAAOwE,UAExB1F,EAAE,iBAAiBkF,IAAIU,MAAMC,MAC7B7F,EAAE,iBAAiB8F,KAAK,WAAY,YACpC9F,EAAE,oBAAoB6D,KAAK+B,MAAMG,MACjC/F,EAAE,oBAAoBkF,IAAIU,MAAMG,MAChC/F,EAAE,oBAAoBgG,SAAS,eAC3BL,mBACA3F,EAAE,YAAYkF,IAAIU,MAAMG,MACxB/F,EAAE,mBAAmBkF,IAAIU,MAAMK,aAC/BjG,EAAE,2BAA2B6D,KAAK+B,MAAMK,aACxCjG,EAAE,sCAAsCkF,IAAIU,MAAMM,UAIlDlG,EAAE,+CAA+CmG,QACjDnG,EAAE,2BAA2BmG,QAC7BnG,EAAEqE,KAAKuB,MAAMQ,MAAM,SAAS9B,MAAO+B,KAC/BrG,EAAE,2BAA2BsG,OAAO,uCAAyCD,IAAIN,KAC7E,cAAgBM,IAAIN,KAAO,aAC/B/F,EAAE,+CAA+CsG,OAAO,qCACpDD,IAAIN,KAAO,qFACXM,IAAIN,KAAO,oBAGlBQ,QAQT1F,eAAeoB,UAAU6C,qBAAuB,SAASY,aAChD1E,KAAKE,OAAOqE,eAAeG,eAI5BE,MAAQ5E,KAAKE,OAAOwE,eAEnBc,oBAAoB,SAASC,OAC9BA,MAAMC,SAASd,MAAMG,MACrBU,MAAME,QAAQf,MAAMK,aACpBQ,MAAMG,QACRpE,KAAKxB,SAQXH,eAAeoB,UAAUuE,oBAAsB,SAASK,UAC/C7F,KAAKI,iBAMNyF,SAAS7F,KAAKI,kBALdb,aAAa4B,OAAO,IAAIc,KAAK,SAASwD,YAC7BrF,iBAAmBqF,MACxBI,SAAS7F,KAAKI,mBAChBoB,KAAKxB,QAWfH,eAAeoB,UAAU8C,gBAAkB,SAASW,aAC3C1E,KAAKE,OAAOqE,eAAeG,eAI5BE,MAAQ5E,KAAKE,OAAOwE,UAExBjF,IAAIqG,WAAW,SAAU,aAAa7D,KAAK,SAAS8D,aAC3CC,eAAe,SAASP,OACzBA,MAAMC,SAASd,MAAMG,KAAO,IAAMgB,QAClCN,MAAME,QAAQtG,UAAUsD,OAAO,oCAAqC,CAACiC,MAAOA,SAC5Ea,MAAMG,QACRpE,KAAKxB,QACTwB,KAAKxB,SAQXH,eAAeoB,UAAU+E,eAAiB,SAASH,UAC1C7F,KAAKK,YAMNwF,SAAS7F,KAAKK,aALdd,aAAa4B,OAAO,IAAIc,KAAK,SAASwD,YAC7BpF,YAAcoF,MACnBI,SAAS7F,KAAKK,cAChBmB,KAAKxB,QAWfH,eAAeoB,UAAU+C,iBAAmB,SAASU,aAC5C1E,KAAKE,OAAOqE,eAAeG,eAI5BE,MAAQ5E,KAAKE,OAAOwE,eAEnBuB,gCAAgCvB,UAAU9B,KAAK,SAAST,MACzD1C,IAAIqG,WAAW,UAAW,UAAU7D,KAAK,SAAS8D,aACzCrE,gBAAgB,SAAS+D,OAC1BA,MAAMC,SAASd,MAAMG,KAAO,IAAMgB,QAClCN,MAAME,QAAQtG,UAAUsD,OAAO,gDAAiD,CAC5EiC,MAAOA,MACPsB,WAAY/D,KAAKgE,UACjBC,eAAgBjE,KAAKkE,iBAEzBZ,MAAMG,QACRpE,KAAKxB,QACTwB,KAAKxB,QACTwB,KAAKxB,SAQXH,eAAeoB,UAAUS,gBAAkB,SAASmE,UAC3C7F,KAAKM,aAgBNuF,SAAS7F,KAAKM,cAfdf,aAAa4B,OAAO,CAChBmF,OAAO,EACPC,OAAQlH,UAAUsD,OAAO,kDAAmD,CAACD,SAAU1C,KAAKe,aAC7FkB,KAAK,SAASwD,YACRnF,aAAemF,MACpBA,MAAMrC,WAAW9B,GAAGpC,aAAauE,OAAOC,SAAU,0BAA2B,WACzE+B,MAAMF,YACD3B,iBAAiB6B,MAAMrC,WAAWH,KAAK,gBAAgBd,KAAK,SACnEX,KAAKxB,OACPyF,MAAMzC,UAAU1B,GAAGpC,aAAauE,OAAOC,SAAU,wBAAyB,SAASC,QAC1EK,iBAAiBhF,EAAE2E,EAAEE,QAAQ1B,KAAK,SACzCX,KAAKxB,OACP6F,SAAS7F,KAAKM,eAChBkB,KAAKxB,QAYfH,eAAeoB,UAAUgF,gCAAkC,SAASvB,cAC5D8B,KAAOxG,KAAKG,eAAeuE,UAC3B+B,UAAY,EACZD,KAAO,IACPC,UAAYD,KAAOxG,KAAKU,QAAU,OAGlCmB,KAAO,WACM7B,KAAKC,gBACTD,KAAKQ,kBACCR,KAAKS,qBACPgG,mBACDzG,KAAKU,QAAU,UAG3BV,KAAKa,OACLgB,KAAKhB,KAAOb,KAAKa,KACjBgB,KAAKE,cAAgB/B,KAAKc,eAAed,KAAKa,OAG3C,IAAI6F,SAASC,UAChBrH,KAAKS,KAAK,CAAC,CAACiC,WAAY,2CAA4CH,KAAMA,QAAQ,GAAGI,KAAK,SAAUC,cAC5FmE,cAAgB,KAChBF,UAAY,KAEZS,KAAO,KACPC,SAAU,EAEd3E,SAASC,KAAKC,QAAQ,SAAUC,KAAMiB,OAC9BuD,UACAV,UAAY9D,KACZwE,SAAU,GAEVxE,KAAKC,MAAQoC,WACb2B,cAAgBO,KAChBC,SAAU,QAGT3G,OAAOmC,KAAKC,KAAOD,SAEpByE,UAAYC,KAAKC,OAAOP,UAAYnD,OAAStD,KAAKU,cACjDP,eAAekC,KAAKC,KAAOwE,UAEhCF,KAAOvE,MACTb,KAAKxB,OAEP2G,QAAQ,CAACN,cAAeA,cAAeF,UAAWA,aACpD3E,KAAKxB,WASfH,eAAeoB,UAAU2C,iBAAmB,SAASc,aAC5C1E,KAAKE,OAAOqE,eAAeG,eAI5BE,MAAQ5E,KAAKE,OAAOwE,UAExBjF,IAAIwH,YAAY,CACZ,CAACC,IAAK,eAAgBC,UAAW,aACjC,CAACD,IAAK,uBAAwBC,UAAW,eAC1ClF,KAAK,SAASmF,cACR3F,gBAAgB,SAASgE,OAC1BA,MAAMC,SAAS0B,QAAQ,IACvB3B,MAAME,QAAQ,MAAQyB,QAAQ,GAAK,KAAOxC,MAAMG,KAC5C,gDAAkDH,MAAMtC,IAAM,MAClEmD,MAAMG,QACRpE,KAAKxB,QACTwB,KAAKxB,SAQXH,eAAeoB,UAAUQ,gBAAkB,SAASoE,UAC3C7F,KAAKO,aAcNsF,SAAS7F,KAAKO,cAbdhB,aAAa4B,OAAO,CAChBoF,OAAQlH,UAAUsD,OAAO,kDAAmD,CAACD,SAAU1C,KAAKe,aAC7FkB,KAAK,SAASwD,YACRlF,aAAekF,MACpBA,MAAMrC,WAAW9B,GAAGpC,aAAauE,OAAOC,SAAU,0BAA2B,WACzE+B,MAAMF,WACFjD,IAAMmD,MAAMrC,WAAWH,KAAK,cAAciB,MAC1CmD,SAAW5B,MAAMrC,WAAWH,KAAK,mBAAmBqE,KAAK,gBACxD7C,SAASnC,IAAK+E,WACrB7F,KAAKxB,OACP6F,SAAS7F,KAAKO,eAChBiB,KAAKxB,QAQVJ,aACDR,cAAcmI,SAAS1H,eAAemB,KAAMnB,eAAgB,+CAC5DD,YAAa,GASjBC,eAAeoB,UAAUuG,eAAiB,SAASC,WAAYC,YACtD1E,UAAUC,KAAK,SAAWwE,WAAa,KAAKvD,IAAIwD,OAAOrD,QAAQ,WAQxExE,eAAeoB,UAAUgD,SAAW,SAASzD,YACpCwC,UAAUC,KAAK,iBAAiBiB,IAAI1D,YACpCA,MAAQA,WACRG,WAAWwD,eAAe,QAC1B5C,gBAGF1B"}